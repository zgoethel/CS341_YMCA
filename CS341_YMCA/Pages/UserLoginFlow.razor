@using Microsoft.AspNetCore.WebUtilities
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components
@using System.ComponentModel.DataAnnotations
@using System.Data.SqlClient
@using System.Security.Cryptography
@using System.Text

@using CS341_YMCA.Helpers
@using CS341_YMCA.Services

@page "/SiteUser/LoginFlow"
@layout SimplifiedLayout

@inject NavigationManager Nav
@inject AuthenticationStateProvider AuthState
@inject SiteUserRepository SiteUsers

@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedLocalStorage ProtectedStorage

<PageTitle>Login</PageTitle>

@* DISPLAY VALIDATION ERROR IF EXISTS *@
@if (!string.IsNullOrEmpty(validationMessage))
{
    <div class="alert alert-danger">@validationMessage</div>
}

@* DISPLAY UI IF ERROR IS BLANK *@
@if(string.IsNullOrEmpty(errorMessage))
{
    <h2>Login</h2>

    <p class="mt-4">Welcome!</p>
    <p class="mt-2">
        Please provide your credentials to log in.
    </p>
        
    <EditForm Model=formBind>

    @* USER EMAIL ("USERNAME") FIELD *@
    <label>Email:</label>
    <InputText class="form-control mb-2"
        type="text"
        @bind-Value=formBind.Email />

    @* USER PASSWORD FIELD *@
    <label>Password:</label>
    <InputText class="form-control"
        type="password" 
        @bind-Value=formBind.Password />

    @* PASSWORD RESET LINK *@
    <a href="SiteUser/RequestPasswordResetFlow" style="margin-top: 2em;color: black;float: right;">Forgot password?</a>
    @* LOG IN BUTTON *@
    <button class="btn btn-primary mt-4 me-2" type="submit" @onclick=SubmitLogin>Log In</button>
    @* REGISTER LINK *@
    <a class="btn btn-secondary mt-4" type="button" href="SiteUser/RegisterFlow">Register</a>
    
    </EditForm>
} else
{
    @* DISPLAY ERROR MESSAGE IF EXISTS *@
    <div class="alert alert-danger">@errorMessage</div>
}

@code {
    /// <summary>
    /// Layout of bound form data.
    /// </summary>
    private class FormBinding
    {
        [Required]
        public string Email = "";

        [Required]
        public string Password = "";
    }

    /// <summary>
    /// Form-bound object instance.
    /// </summary>
    private FormBinding formBind = new();

    private string errorMessage = "";
    private string validationMessage = "";

    /// <summary>
    /// Attempts to log in with the provided user details.
    /// </summary>
    private void SubmitLogin()
    {
        // Validate provided details
        if (string.IsNullOrEmpty(formBind.Email)
            || string.IsNullOrEmpty(formBind.Password)
        )
        {
            validationMessage = "Please provide all the login details.";
            return;
        }
        // Attempt the login authentication
        var result = SiteUsers.SiteUser_Authenticate(formBind.Email, formBind.Password.CalculateSha512());

        if (result.Success)
        {
            // Set auth state logged in
            var _authState = AuthState as AuthenticationStateService;
            _authState!.LogIn(formBind.Email, formBind.Password);
            // Save tokens in local storage
            ProtectedStorage.SetAsync("SessionName", formBind.Email);
            ProtectedStorage.SetAsync("SessionKey", formBind.Password);

            // Returns to home page
            Nav.NavigateTo(Nav.BaseUri);
        } else
        {
            validationMessage = result.Error!;
        }
    }
}