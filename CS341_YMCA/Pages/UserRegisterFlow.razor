@* ALLOWS A USER TO REGISTER A NEW ACCOUNT *@
@* ZACH GOETHEL *@

@using CS341_YMCA.Pages
@using Microsoft.AspNetCore.WebUtilities
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components
@using System.ComponentModel.DataAnnotations
@using System.Data.SqlClient
@using System.Security.Cryptography
@using System.Text

@using CS341_YMCA.Helpers
@using CS341_YMCA.Services

@page "/SiteUser/RegisterFlow"
@layout SimplifiedLayout

@inject SiteUserRepository SiteUsers
@inject NavigationManager Nav

<PageTitle>Member Registration</PageTitle>

@* DISPLAY VALIDATION ERROR IF IT EXISTS *@
@if (!string.IsNullOrEmpty(validationMessage))
{
    <div class="alert alert-danger">@validationMessage</div>
}

@* DISPLAY UI IF SUCCESS IS BLANK *@
@if (string.IsNullOrEmpty(successMessage))
{
    <h2>Member Registration</h2>

    <p class="mt-4">
        Please provide the following details to create your account.
        Use an email which you use regularly, as some important messages
        may be sent there.
    </p>

    <p class="mt-2">
        Please provide the following details:
    </p>

    <EditForm Model=formBind>

     @* FIRST NAME FIELD *@
    <label>First Name:</label>
    <InputText class="form-control mb-2"
        type="text"
        @bind-Value=formBind.FirstName />

    @* LAST NAME FIELD *@
    <label>Last Name:</label>
    <InputText class="form-control mb-2"
        type="text" 
        @bind-Value=formBind.LastName />

     @* EMAIL FIELD *@
    <label>Email:</label>
    <InputText class="form-control"
        type="text" 
        @bind-Value=formBind.Email />

    @* REGISTER BUTTON *@
    <button class="btn btn-primary mt-4 me-2" type="submit" @onclick=SubmitRegistration>Create Account</button>
    @* RETURN TO SIGNIN BUTTON *@
    <a class="btn btn-secondary mt-4" type="button" href="SiteUser/LoginFlow">Sign In</a>
    
    </EditForm>
} else
{
    @* DISPLAY SUCCESS MESSAGE IF EXISTS *@
    <div class="alert alert-success">@successMessage</div>
}

@code {
    /// <summary>
    /// Layout of bound form data.
    /// </summary>
    private class FormBinding
    {
        [Required]
        public string FirstName = "";

        [Required]
        public string LastName = "";

        [Required]
        public string Email = "";
    }

    /// <summary>
    /// Form-bound object instance.
    /// </summary>
    private FormBinding formBind = new();

    private string successMessage = "";
    private string validationMessage = "";

    /// <summary>
    /// Performs the registration from form submission.
    /// </summary>
    private void SubmitRegistration()
    {
        // Validate provided details
        if (string.IsNullOrEmpty(formBind.FirstName)
            || string.IsNullOrEmpty(formBind.LastName)
            || string.IsNullOrEmpty(formBind.Email)
        )
        {
            validationMessage = "Please fill in all of the form values.";
            return;
        }
        // Perform the registration
        var result = SiteUsers.SiteUser_Register(formBind.FirstName, formBind.LastName, formBind.Email);

        // Display the proper message for the result
        if (result.Success)
        {
            validationMessage = "";
            successMessage = "A confirmation email has been sent to you. Check your inbox to continue the registration process; the message may be incorrectly marked as spam.";
        } else
        {
            successMessage = "";
            validationMessage = result.Error!;
        }
    }
}