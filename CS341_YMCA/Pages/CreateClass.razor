@page "/ManageClasses/Create"

@using CS341_YMCA.Data
@using CS341_YMCA.Controllers
@using System.ComponentModel.DataAnnotations

@inject NavigationManager Nav
@inject IHttpContextAccessor Con
@inject LinkGenerator Links
@inject ClassController Classes
@inject Database Sql

<PageTitle>Create a Class</PageTitle>

@if (LoggedIn?.IsAdmin ?? false)
{
    <h1>Create a New Class Listing</h1>
    <hr />
    <h3>Fill in the class details below, then click submit</h3>

    @if (!string.IsNullOrEmpty(ValidationMessage))
    {
        <div class="alert alert-danger">@ValidationMessage</div>
    }

    <EditForm Model=FormBind>
        <div class="row mt-4">
            <div class="col-5">
                <label>Class name:</label>
                <InputText class="form-control mb-2" type="text" @bind-Value=FormBind.ClassName />
            </div>
        </div>
        <button class="btn btn-primary mt-4" type="submit" @onclick=Submit>Submit</button>
    </EditForm>
} else
{
    <div class="alert alert-danger">You are <strong>not</strong> an admin user and cannot access this page.</div>
}

@code {
    [CascadingParameter]
    protected SiteUserDBO? LoggedIn { get; set; }
    [Parameter]
    public string? Id { get; set; }

    private class FormBinding
    {
        [Required]
        public string ClassName = "";

        public bool AllowEnrollment = true;

        public bool Enabled = true;
    }

    private FormBinding FormBind = new();
    private string ErrorMessage = "";
    private string ValidationMessage = "";

    private void Submit()
    {
        if (string.IsNullOrEmpty(FormBind.ClassName))
        {
            ValidationMessage = "Please provide all the class details.";
            return;
        }

        var Result = Classes.Class_Set(null, FormBind.ClassName, FormBind.AllowEnrollment, FormBind.Enabled);

        if (Result.Success)
        {
            Nav.NavigateTo("/ManageClasses");
        } else
        {
            ValidationMessage = Result.Error!;
        }
    }
}