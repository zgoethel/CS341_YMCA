@page "/ManageClasses/{Id}"

@using CS341_YMCA.Data
@using CS341_YMCA.Controllers

@inject ClassController Classes
@inject Database Sql
@inject NavigationManager Nav

<PageTitle>Manage Class</PageTitle>

@if (!string.IsNullOrEmpty(ValidationMessage))
{
    <div class="alert alert-warning">@ValidationMessage</div>
}

@if (LoggedIn?.IsAdmin ?? false)
{
    <h1>Class Editor</h1>
    <hr />

    <EditForm Model=ActiveClass style="white-space: nowrap;">
        <div style="width: 38em;" class="class-editor-col me-4">
            <h3>Manage details for '@ActiveClass.ClassName'</h3>

            <label>Class name:<i style="color: red">*</i></label>
            <InputText class="form-control mb-2" type="text" @bind-Value=ActiveClass.ClassName />
            
            <label>Short description:<i style="color: red">*</i></label>
            <InputText class="form-control mb-2" type="text" @bind-Value=ActiveClass.ShortDescription />        
        
            <label>Detailed description:</label>
            <InputTextArea rows=8 class="form-control mb-2" type="text" @bind-Value=ActiveClass.LongDescription />
        
            <InputCheckbox class="mb-2" @bind-Value=ActiveClass.AllowEnrollment />&nbsp;
            <label>Allow Enrollment <i>(within dates)</i></label>

            <InputCheckbox class="mb-2 ms-2" @bind-Value=ActiveClass.Enabled />&nbsp;
            <label>Enabled</label>
            <br />
            <br />
            
            <h3>Class Prerequisites</h3>
            <ClassSelector Exclude=@ActiveClass.Id Csv=@(ActiveClass.PrereqIds ?? "") @ref=PrereqSelector />
            
            <button class="btn btn-primary mt-4" type="submit" @onclick=SaveForm>Submit</button>
        </div>
        <div style="width: 20em;" class="class-editor-col">
            <h3 class="mb-4">Pricing and Enrollment</h3>

            <div class="card mb-4">
                <div class="card-header">
                    Settings for Members
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-sm-7">
                            <label>Enrollment start date:</label>
                       </div>
                        <div class="col-sm-5">
                            <label>Length (days):</label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-7">
                            <InputDate class="form-control" @bind-Value=ActiveClass.MemberEnrollmentStart />
                        </div>
                        <div class="col-sm-5">
                            <InputNumber step=1 min=1 class="form-control" @bind-Value=ActiveClass.MemberEnrollmentDays />
                        </div>
                    </div>
                    <br />
            
                    <label>Additional fee for members:</label>
                    <div class="row">
                        <div class="col-sm-7">
                            <div class="input-group mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">$</span>
                                </div>
                                <InputNumber step=1 min=0 class="form-control" @bind-Value=ActiveClass.MemberPrice />
                                <div class="input-group-append">
                                    <span class="input-group-text">.00</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card mb-4">
                <div class="card-header">
                    Settings for non-members
                </div>
                <div class="card-body">
                    <InputCheckbox @bind-Value=ActiveClass.AllowNonMembers />
                    &nbsp;Allow non-members to join this class
                    <br />
                    <br />

                    <div style="@NonMemberStyle">
                        <div class="row">
                            <div class="col-sm-7">
                                <label>Enrollment start date:</label>
                           </div>
                            <div class="col-sm-5">
                                <label>Length (days):</label>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-7">
                                <InputDate class="form-control" @bind-Value=ActiveClass.NonMemberEnrollmentStart />
                            </div>
                            <div class="col-sm-5">
                                <InputNumber step=1 min=1 class="form-control" @bind-Value=ActiveClass.NonMemberEnrollmentDays />
                            </div>
                        </div>
                        <br />
                
                        <label>Additional fee for non-members:</label>
                        <div class="row">
                            <div class="col-sm-7">
                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">$</span>
                                    </div>
                                    <InputNumber step=1 min=0 class="form-control" @bind-Value=ActiveClass.NonMemberPrice />
                                    <div class="input-group-append">
                                        <span class="input-group-text">.00</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <h3 class="mb-4 mt-4">Enrolled Patrons</h3>
            <div class="alert alert-secondary">Coming soon</div>
        </div>
        <br />
    </EditForm>
} else
{
    <div class="alert alert-danger">You are <strong>not</strong> an admin user and cannot access this page.</div>
}

@code {
    [CascadingParameter]
    protected SiteUserDBO? LoggedIn { get; set; }
    [Parameter]
    public string? Id { get; set; }

    private ClassDBO ActiveClass = new();
    private string ValidationMessage = "";
    private ClassSelector? PrereqSelector { get; set; }

    private string NonMemberStyle => ActiveClass.AllowNonMembers
        ? "display: block;"
        : "display: none;";

    protected override void OnAfterRender(bool FirstRender)
    {
        base.OnAfterRender(FirstRender);

        if (FirstRender)
        {
            if (Id != "Create")
                ActiveClass = Classes.Class_GetById(int.Parse(Id!)).Get()!;

            StateHasChanged();
        }
    }

    private void SaveForm()
    {
        if (
            string.IsNullOrEmpty(ActiveClass.ClassName)
            || string.IsNullOrEmpty(ActiveClass.ShortDescription)
        )
        {
            ValidationMessage = "Please provide all required fields.";
            return;
        }

        var Result = Classes.Class_Set(
            Id: ActiveClass.Id,
            ClassName: ActiveClass.ClassName,
            AllowEnrollment: ActiveClass.AllowEnrollment,
            Enabled: ActiveClass.Enabled,
            ShortDescription: ActiveClass.ShortDescription,
            LongDescription: ActiveClass.LongDescription,
            PrereqIds: PrereqSelector?.Csv,
            MemberEnrollmentStart: ActiveClass.MemberEnrollmentStart,
            MemberEnrollmentDays: ActiveClass.MemberEnrollmentDays,
            NonMemberEnrollmentStart: ActiveClass.NonMemberEnrollmentStart,
            NonMemberEnrollmentDays: ActiveClass.NonMemberEnrollmentDays,
            AllowNonMembers: ActiveClass.AllowNonMembers,
            MemberPrice: ActiveClass.MemberPrice,
            NonMemberPrice: ActiveClass.NonMemberPrice
        );

        if (Result.Success)
            Nav.NavigateTo("ManageClasses");
        else
        {
            ValidationMessage = Result.Error ?? "An unknown error has occurred.";
            StateHasChanged();
        }
    }
}

<style>
    div.class-editor-col
    {
        max-width: 100%;
        display: inline-block;
        vertical-align: top;
    }
</style>