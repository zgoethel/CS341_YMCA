@page "/Schedule"

@using CS341_YMCA.Components
@using CS341_YMCA.Helpers
@using CS341_YMCA.Services

@inject ClassRepository Classes

<PageTitle>Edit Schedule</PageTitle>

<h1>Edit Schedule</h1>
<hr />
<h3>View and change your class enrollments</h3>

@{
    var Enrollments = Classes.ClassEnrollment_GetByUserId(LoggedIn!.Id).Get()!;
    var EnrolledCsv = string.Join(',', Enrollments.Select((It) => It.ClassId.ToString()));
    var EnrolledClasses = Classes.Class_GetByIds(EnrolledCsv).Get()!;
}

<div class="overflow-auto mt-3">

@if (EnrolledClasses.Count == 0)
{
    <h4 class="mt-3">You are not registered for any classes</h4>
} else
{
    <div class="bg-secondary bg-opacity-50 overflow-auto p-4" id="sched-holder">
    @foreach(var Class in EnrolledClasses)
    {
        <div class="m-2 p-2 bg-light shadow">
            <div style="display: block;height: 9.5em;" class="overflow-auto">
                <a href="Enroll/@(Class.Id)"><h5>@(Class.ClassName)</h5></a>
                <p>@Class.ShortDescription</p>
            </div>
            <div style="display: block;">
                <hr class="mt-2 mb-2" />
                <a class="btn btn-primary me-1" href="Enroll/@(Class.Id)">View</a>
                <a class="btn btn-danger" @onclick="() => OpenDropModal(Class)">Drop</a>
            </div>
        </div>
    }
    </div>

    <h3 class="mt-4 mb-3">Your upcoming weekly schedules</h3>
    <ClassScheduler DisplayClassTitles=true
        ShowEditing=false
        NumWeeks=5
        DisplayUserSched=LoggedIn.Id
        OverrideDateFocus=true />
}
</div>

<style>
    th.col-group
    {
        background: #621414;
        color: white;
        text-align: center;
        border-left: 2px solid #621414;
    }
    td
    {
        vertical-align: middle;
    }
    div#sched-holder
    {
        box-shadow: 0 0 1em 1em #9da4ac inset;
        /*white-space: nowrap;*/
    }
    div#sched-holder > div
    {
        vertical-align: top;
        width: 15em;
        height: 14em;
        display: inline-block;
        border-radius: 0.2em;
        /* white-space: initial; */
        border: 1px solid #625353;
    }
</style>

<BsModal @ref=DropModal
    SubmitText="Drop"
    SubmitAction=DropDialogSubmit
    SubmitClass="danger">

    <Title>You are about to drop the class <strong>'@DropClass?.ClassName'</strong></Title>
    <Body>
        <p class="font-weight-bold">This action cannot be undone. Are you sure you wish to continue?</p>
        <ul class="text-danger">
            <li>You will no longer be enrolled in this class.</li>
            <li>The class fee will <strong>not</strong> be refunded.</li>
        </ul>
    </Body>
</BsModal>


@code
{
    [CascadingParameter]
    private SiteUserDBO LoggedIn { get; set; } = new();
    [Parameter]
    public ClassEnrollmentDBO Enrolled {get; set; } = new();

    private BsModal? DropModal;
    private ClassDBO? DropClass;

    private void OpenDropModal(ClassDBO Class)
    {
        DropClass = Class;
        StateHasChanged();

        DropModal!.Open();
    }

    private async Task<bool> DropDialogSubmit() => await Task.Run(() =>
    {
        var Result = Classes.Class_DropUser(DropClass!.Id, LoggedIn!.Id);
        DropClass = null;
        InvokeAsync(() => StateHasChanged());
        return Result.Success;
    });
}