/*
Deployment script for CS341_YMCA

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "CS341_YMCA"
:setvar DefaultFilePrefix "CS341_YMCA"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Altering Procedure [dbo].[SiteUser_Register]...';


GO
-- =============================================
-- Author:		Zach Goethel
-- Create date: Jan. 26, 2022
-- Description:	Registers a user, generating their initial reset token
-- =============================================
ALTER PROCEDURE [dbo].[SiteUser_Register]
	-- Add the parameters for the stored procedure here
	@FirstName NVARCHAR(50),
	@LastName NVARCHAR(50) = NULL,
	@Email NVARCHAR(100),
	@IsAdmin BIT = 0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	-- Attempt to find an existing user with the same email
	DECLARE @ExistingUser INT =
	(
		SELECT TOP 1 [Id] FROM [SiteUser]
		WHERE [Email] = @Email
	);

	IF (@ExistingUser IS NOT NULL)
	BEGIN
		-- Email is in use already; invalid request
		RAISERROR('That email is already in use by another account.', 18, 1);
		RETURN;
	END
	ELSE
	BEGIN
		-- User details check out; create new record
		INSERT INTO [SiteUser]
		(
			[FirstName],
			[LastName],
			[Email],
			[ResetToken],
			[IsAdmin]
		) VALUES
		(
			@FirstName,
			@LastName,
			@Email,
			NEWID(),
			@IsAdmin
		);

		SELECT
			[Id],
			[ResetToken]
		FROM [SiteUser]
		WHERE
			[Id] = SCOPE_IDENTITY()
			;
	END
END
GO
PRINT N'Creating Procedure [dbo].[Class_GetByIds]...';


GO
-- =============================================
-- Author:		Zach Goethel
-- Create date: Feb. 24, 2022
-- Description:	Returns details associated with the provided IDs
-- =============================================
CREATE PROCEDURE [dbo].[Class_GetByIds]
	-- Add the parameters for the stored procedure here
	@Csv NVARCHAR(MAX)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT
		[Id],
		[ClassName],
		[AllowEnrollment],
		[Enabled],
		[Created],
		[Updated],
		[ShortDescription],
		[LongDescription],
		[PrereqIds],
		[MemberEnrollmentStart],
		[MemberEnrollmentDays],
		[NonMemberEnrollmentStart],
		[NonMemberEnrollmentDays],
		[AllowNonMembers],
		[MemberPrice],
		[NonMemberPrice]
	FROM [ClassMain]
	WHERE
		[Id] IN (SELECT [ID] FROM [dbo].[SplitID](@Csv, ','))
		;

	END
GO
PRINT N'Update complete.';


GO
