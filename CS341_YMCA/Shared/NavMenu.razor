@using CS341_YMCA.Helpers
@using CS341_YMCA.Services

@inject NavigationManager Nav
@inject IHttpContextAccessor Con
@inject LinkGenerator Links
@inject AuthenticationStateProvider AuthState
@inject DatabaseService Sql

@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedLocalStorage ProtectedStorage

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="@Nav.BaseUri.ToString()">
            <img src="images/ymca_icon.jpg" id="ymca-icon" />
        </a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="Enroll">
                <span class="oi oi-plus" aria-hidden="true"></span> Browse and Enroll
            </NavLink>
        </div>
        @if (LoggedIn.Id != 0)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="Schedule">
                    <span class="oi oi-pencil" aria-hidden="true"></span> Edit Schedule
                </NavLink>
            </div>
        }
        @if(LoggedIn.IsAdmin)
        {
            <div class="nav-item px-3">
                <style>
                    a.admin-nav-link
                    {
                        background: #49938c;
                    }
                </style>
                <NavLink class="nav-link admin-nav-link" href="ManageClasses">
                    <span class="oi oi-star" aria-hidden="true"></span> Manage Classes
                </NavLink>
            </div>
            
            <div class="nav-item px-3">
                <NavLink class="nav-link admin-nav-link" href="ManageUsers">
                    <span class="oi oi-star" aria-hidden="true"></span> Member Accounts
                </NavLink>
            </div>
        }
    </nav>
    <div id="greeting">
        <p>
            Hi, <strong>@((LoggedIn.FirstName + " " + LoggedIn.LastName).Trim())</strong>!
            <br/>

            @if (LoggedIn.IsMember)
            {
                <span class="badge bg-success">Member</span>
            } else
            {
                <span class="badge bg-info">Non-member</span>
            }
            @if (LoggedIn.IsAdmin)
            {
                <span class="ms-2 badge bg-danger">Admin</span>
            }
        </p>

        @if (LoggedIn.Id == 0)
        {
            <a href="SiteUser/LoginFlow" class="btn btn-primary">Log in</a>
        } else
        {
            <button @onclick=LogOutClick class="btn btn-primary">Log out</button>
            <a class="btn btn-secondary" href="Settings"><span class="oi oi-wrench" style="vertical-align: middle;"></span></a>
        }
    </div>
</div>

@code {
    [CascadingParameter]
    protected Task<AuthenticationState>? Auth { get; set; }
    [CascadingParameter]
    protected SiteUserDBO LoggedIn { get; set; } = new();

    private bool CollapseNavmenu = true;
    private string? NavMenuCssClass => CollapseNavmenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        CollapseNavmenu = !CollapseNavmenu;
    }

    void LogOutClick()
    {
        ProtectedStorage.DeleteAsync("SessionName");
        ProtectedStorage.DeleteAsync("SessionKey");

        var _AuthState = AuthState as AuthenticationStateService;
        _AuthState?.LogOut();

        StateHasChanged();
    }
}
